(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{604:function(t,e,d){"use strict";d.r(e);var o=d(1),a=Object(o.a)({},(function(){var t=this,e=t.$createElement,d=t._self._c||e;return d("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[d("h1",{attrs:{id:"rest-endpoints-migration"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#rest-endpoints-migration"}},[t._v("#")]),t._v(" REST Endpoints Migration")]),t._v(" "),d("p",{attrs:{synopsis:""}},[t._v("Migrate to gRPC-Gateway REST endpoints. Legacy REST endpoints were marked as deprecated in v0.40 and will be removed in v0.45.")]),t._v(" "),d("div",{staticClass:"custom-block warning"},[d("p",[t._v("Two Legacy REST endpoints ("),d("code",[t._v("POST /txs")]),t._v(" and "),d("code",[t._v("POST /txs/encode")]),t._v(") were removed ahead of schedule in v0.44 due to a security vulnerability.")])]),t._v(" "),d("h2",{attrs:{id:"legacy-rest-endpoints"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#legacy-rest-endpoints"}},[t._v("#")]),t._v(" Legacy REST Endpoints")]),t._v(" "),d("p",[t._v("Cosmos SDK versions v0.39 and earlier registered REST endpoints using a package called "),d("code",[t._v("gorilla/mux")]),t._v(". These REST endpoints were marked as deprecated in v0.40 and have since been referred to as legacy REST endpoints. Legacy REST endpoints will be officially removed in v0.45.")]),t._v(" "),d("h2",{attrs:{id:"grpc-gateway-rest-endpoints"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#grpc-gateway-rest-endpoints"}},[t._v("#")]),t._v(" gRPC-Gateway REST Endpoints")]),t._v(" "),d("p",[t._v("Following the Protocol Buffers migration in v0.40, Cosmos SDK has been set to take advantage of a vast number of gRPC tools and solutions. v0.40 introduced new REST endpoints generated from "),d("RouterLink",{attrs:{to:"/building-modules/query-services.html"}},[t._v("gRPC "),d("code",[t._v("Query")]),t._v(" services")]),t._v(" using "),d("a",{attrs:{href:"https://grpc-ecosystem.github.io/grpc-gateway/",target:"_blank",rel:"noopener noreferrer"}},[t._v("grpc-gateway"),d("OutboundLink")],1),t._v(". These new REST endpoints are referred to as gRPC-Gateway REST endpoints.")],1),t._v(" "),d("h2",{attrs:{id:"migrating-to-new-rest-endpoints"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#migrating-to-new-rest-endpoints"}},[t._v("#")]),t._v(" Migrating to New REST Endpoints")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th",[t._v("Legacy REST Endpoint")]),t._v(" "),d("th",[t._v("Description")]),t._v(" "),d("th",[t._v("New gRPC-gateway REST Endpoint")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[d("code",[t._v("GET /txs/{hash}")])]),t._v(" "),d("td",[t._v("Query tx by hash")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/tx/v1beta1/txs/{hash}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /txs")])]),t._v(" "),d("td",[t._v("Query tx by events")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/tx/v1beta1/txs")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("POST /txs")])]),t._v(" "),d("td",[t._v("Broadcast tx")]),t._v(" "),d("td",[d("code",[t._v("POST /cosmos/tx/v1beta1/txs")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("POST /txs/encode")])]),t._v(" "),d("td",[t._v("Encodes an Amino JSON tx to an Amino binary tx")]),t._v(" "),d("td",[t._v("N/A, use Protobuf directly")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("POST /txs/decode")])]),t._v(" "),d("td",[t._v("Decodes an Amino binary tx into an Amino JSON tx")]),t._v(" "),d("td",[t._v("N/A, use Protobuf directly")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("POST /bank/*")])]),t._v(" "),d("td",[t._v("Create unsigned "),d("code",[t._v("Msg")]),t._v("s for bank tx")]),t._v(" "),d("td",[t._v("N/A, use Protobuf directly")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /bank/balances/{address}")])]),t._v(" "),d("td",[t._v("Get the balance of an address")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/bank/v1beta1/balances/{address}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /bank/total")])]),t._v(" "),d("td",[t._v("Get the total supply of all coins")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/bank/v1beta1/supply")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /bank/total/{denom}")])]),t._v(" "),d("td",[t._v("Get the total supply of one coin")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/bank/v1beta1/supply/{denom}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("POST /distribution/delegators/{delegatorAddr}/rewards")])]),t._v(" "),d("td",[t._v("Withdraw all delegator rewards")]),t._v(" "),d("td",[t._v("N/A, use Protobuf directly")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("POST /distribution/*")])]),t._v(" "),d("td",[t._v("Create unsigned "),d("code",[t._v("Msg")]),t._v("s for distribution")]),t._v(" "),d("td",[t._v("N/A, use Protobuf directly")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /distribution/delegators/{delegatorAddr}/rewards")])]),t._v(" "),d("td",[t._v("Get the total rewards balance from all delegations")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/distribution/v1beta1/v1beta1/delegators/{delegator_address}/rewards")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}")])]),t._v(" "),d("td",[t._v("Query a delegation reward")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/distribution/v1beta1/delegators/{delegatorAddr}/rewards/{validatorAddr}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /distribution/delegators/{delegatorAddr}/withdraw_address")])]),t._v(" "),d("td",[t._v("Get the rewards withdrawal address")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/distribution/v1beta1/delegators/{delegatorAddr}/withdraw_address")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /distribution/validators/{validatorAddr}")])]),t._v(" "),d("td",[t._v("Validator distribution information")]),t._v(" "),d("td",[t._v("N/A")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /distribution/validators/{validatorAddr}/rewards")])]),t._v(" "),d("td",[t._v("Commission and outstanding rewards of a single a validator")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/distribution/v1beta1/validators/{validatorAddr}/commission")]),t._v(" "),d("br"),t._v(" "),d("code",[t._v("GET /cosmos/distribution/v1beta1/validators/{validatorAddr}/outstanding_rewards")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /distribution/validators/{validatorAddr}/outstanding_rewards")])]),t._v(" "),d("td",[t._v("Outstanding rewards of a single validator")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/distribution/v1beta1/validators/{validatorAddr}/outstanding_rewards")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /distribution/parameters")])]),t._v(" "),d("td",[t._v("Get the current distribution parameter values")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/distribution/v1beta1/params")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /distribution/community_pool")])]),t._v(" "),d("td",[t._v("Get the amount held in the community pool")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/distribution/v1beta1/community_pool")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /evidence/{evidence-hash}")])]),t._v(" "),d("td",[t._v("Get evidence by hash")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/evidence/v1beta1/evidence/{evidence_hash}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /evidence")])]),t._v(" "),d("td",[t._v("Get all evidence")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/evidence/v1beta1/evidence")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("POST /gov/*")])]),t._v(" "),d("td",[t._v("Create unsigned "),d("code",[t._v("Msg")]),t._v("s for gov")]),t._v(" "),d("td",[t._v("N/A, use Protobuf directly")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /gov/parameters/{type}")])]),t._v(" "),d("td",[t._v("Get government parameters")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/gov/v1beta1/params/{type}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /gov/proposals")])]),t._v(" "),d("td",[t._v("Get all proposals")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/gov/v1beta1/proposals")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /gov/proposals/{proposal-id}")])]),t._v(" "),d("td",[t._v("Get proposal by id")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/gov/v1beta1/proposals/{proposal-id}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /gov/proposals/{proposal-id}/proposer")])]),t._v(" "),d("td",[t._v("Get proposer of a proposal")]),t._v(" "),d("td",[t._v("N/A, use Query tx by events endpoint")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /gov/proposals/{proposal-id}/deposits")])]),t._v(" "),d("td",[t._v("Get deposits of a proposal")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/gov/v1beta1/proposals/{proposal-id}/deposits")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /gov/proposals/{proposal-id}/deposits/{depositor}")])]),t._v(" "),d("td",[t._v("Get depositor a of deposit")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/gov/v1beta1/proposals/{proposal-id}/deposits/{depositor}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /gov/proposals/{proposal-id}/tally")])]),t._v(" "),d("td",[t._v("Get tally of a proposal")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/gov/v1beta1/proposals/{proposal-id}/tally")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /gov/proposals/{proposal-id}/votes")])]),t._v(" "),d("td",[t._v("Get votes of a proposal")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/gov/v1beta1/proposals/{proposal-id}/votes")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /gov/proposals/{proposal-id}/votes/{vote}")])]),t._v(" "),d("td",[t._v("Get a particular vote")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/gov/v1beta1/proposals/{proposal-id}/votes/{vote}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /minting/parameters")])]),t._v(" "),d("td",[t._v("Get parameters for minting")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/minting/v1beta1/params")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /minting/inflation")])]),t._v(" "),d("td",[t._v("Get minting inflation")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/minting/v1beta1/inflation")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /minting/annual-provisions")])]),t._v(" "),d("td",[t._v("Get minting annual provisions")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/minting/v1beta1/annual_provisions")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("POST /slashing/*")])]),t._v(" "),d("td",[t._v("Create unsigned "),d("code",[t._v("Msg")]),t._v("s for slashing")]),t._v(" "),d("td",[t._v("N/A, use Protobuf directly")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /slashing/validators/{validatorPubKey}/signing_info")])]),t._v(" "),d("td",[t._v("Get validator signing info")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/slashing/v1beta1/signing_infos/{cons_address}")]),t._v(" (Use consensus address instead of pubkey)")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /slashing/signing_infos")])]),t._v(" "),d("td",[t._v("Get all signing infos")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/slashing/v1beta1/signing_infos")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /slashing/parameters")])]),t._v(" "),d("td",[t._v("Get slashing parameters")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/slashing/v1beta1/params")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("POST /staking/*")])]),t._v(" "),d("td",[t._v("Create unsigned "),d("code",[t._v("Msg")]),t._v("s for staking")]),t._v(" "),d("td",[t._v("N/A, use Protobuf directly")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/delegators/{delegatorAddr}/delegations")])]),t._v(" "),d("td",[t._v("Get all delegations from a delegator")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/delegations/{delegatorAddr}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/delegators/{delegatorAddr}/unbonding_delegations")])]),t._v(" "),d("td",[t._v("Get all unbonding delegations from a delegator")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/delegators/{delegatorAddr}/txs")])]),t._v(" "),d("td",[t._v("Get all staking txs (i.e msgs) from a delegator")]),t._v(" "),d("td",[t._v("Removed")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/delegators/{delegatorAddr}/validators")])]),t._v(" "),d("td",[t._v("Query all validators that a delegator is bonded to")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/delegators/{delegatorAddr}/validators/{validatorAddr}")])]),t._v(" "),d("td",[t._v("Query a validator that a delegator is bonded to")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/delegators/{delegatorAddr}/delegations/{validatorAddr}")])]),t._v(" "),d("td",[t._v("Query a delegation between a delegator and a validator")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}")])]),t._v(" "),d("td",[t._v("Query all unbonding delegations between a delegator and a validator")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/redelegations")])]),t._v(" "),d("td",[t._v("Query redelegations")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/v1beta1/delegators/{delegator_addr}/redelegations")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/validators")])]),t._v(" "),d("td",[t._v("Get all validators")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/validators")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/validators/{validatorAddr}")])]),t._v(" "),d("td",[t._v("Get a single validator info")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/validators/{validatorAddr}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/validators/{validatorAddr}/delegations")])]),t._v(" "),d("td",[t._v("Get all delegations to a validator")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/validators/{validatorAddr}/delegations")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/validators/{validatorAddr}/unbonding_delegations")])]),t._v(" "),d("td",[t._v("Get all unbonding delegations from a validator")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/historical_info/{height}")])]),t._v(" "),d("td",[t._v("Get HistoricalInfo at a given height")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/historical_info/{height}")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/pool")])]),t._v(" "),d("td",[t._v("Get the current state of the staking pool")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/pool")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /staking/parameters")])]),t._v(" "),d("td",[t._v("Get the current staking parameter values")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/staking/v1beta1/params")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("POST /upgrade/*")])]),t._v(" "),d("td",[t._v("Create unsigned "),d("code",[t._v("Msg")]),t._v("s for upgrade")]),t._v(" "),d("td",[t._v("N/A, use Protobuf directly")])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /upgrade/current")])]),t._v(" "),d("td",[t._v("Get the current plan")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/upgrade/v1beta1/current_plan")])])]),t._v(" "),d("tr",[d("td",[d("code",[t._v("GET /upgrade/applied_plan/{name}")])]),t._v(" "),d("td",[t._v("Get a previously applied plan")]),t._v(" "),d("td",[d("code",[t._v("GET /cosmos/upgrade/v1beta1/applied/{name}")])])])])]),t._v(" "),d("h2",{attrs:{id:"migrating-to-grpc"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#migrating-to-grpc"}},[t._v("#")]),t._v(" Migrating to gRPC")]),t._v(" "),d("p",[t._v("Instead of hitting REST endpoints as described above, the Cosmos SDK also exposes a gRPC server. Any client can use gRPC instead of REST to interact with the node. An overview of different ways to communicate with a node can be found "),d("RouterLink",{attrs:{to:"/core/grpc_rest.html"}},[t._v("here")]),t._v(", and a concrete tutorial for setting up a gRPC client can be found "),d("RouterLink",{attrs:{to:"/run-node/txs.html#programmatically-with-go"}},[t._v("here")]),t._v(".")],1)])}),[],!1,null,null,null);e.default=a.exports}}]);